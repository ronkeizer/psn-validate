##############################################################################
## PsN validation tool, ini-file example
## 2012, Ron Keizer
##############################################################################

[folders]
lib_folder      = $HOME/Dropbox/projects/valpsn/library
			  # Absolute path to model library
out_folder      = $HOME/valpsn/runs
			  # Absolute path where to run validation tests
R_script_folder = $HOME/Dropbox/projects/valpsn/R
report_folder   = $HOME/valpsn/reports
			  # Absolute path to folder for validation reports
run_folder      = PsN_3.5.3_20120930
                          # Folder for this specific validation run,
			  # will be created below the "out_folder"
report          = PsN_3.5.3_20120930.txt
                          # Report file to generate, will be
			  # created in the "report_folder"

[software]
perl_executable=perl      # location of perl executable, if not in PATH
psn_executables=	  # location of folder with PsN executables,
			  # No need to specify this if in PATH.
psn_version=              # Optionally specify a different version to
                          # use, e.g. psn_vesion=3.5.3. If not speci-
                          # fied, the default version is used.
R_executable=R            # Location of R executable, if not in PATH
nm_mod_extension=mod      # File extension of NONMEM model files
nm_out_extension=lst      # Filename extension of NONMEM output files

[validation]              # General validation settings
                          # Note: all these settings can be overridden
			  # in each specific PsN test!
run_psn=1		  # Default is 1|TRUE. set this to FALSE if you
			  # only want to generate a validation report
			  # based on output from a previous validation
			  # procedure.
run_test=1		  # Actually perform the tests using the R-scripts?
			  # By default set to 1
verbose_level=2           # 1: condensed info
			  # 2: extended run/test info (default)
			  # 3: also include NONMEM output
nm_version=default        # NONMEM version to test. Can  also be
			  # issued specifically per test, which
			  # overrides the general setting. If not
			  # specified, PsN will use "default".
extra_arguments=	  # Optional arguments to add to all PsN
			  # commands, e.g.:
			  # -clean=1 -model_dirname
threads=5                 # Number of threads to use for PsN commands
tolerance=0.005  	  # Allowed relative difference between test
		 	  # and reference estimate. Specify as
		 	  # fraction: (test-ref)/ref. So the default
		 	  # 0.001 = 0.1% difference allowed.
ofv_abs_tol=1             # Absolute tolerance allowed in OFV tests.
clean=2                   # PsN -clean option: (0/1/2/3)

##############################################################################
## PsN tools that can be included in a validation test are currently:
## execute, bootstrap, vpc, llp, scm, sse.
##############################################################################

[execute]
folder=examples1	       # The folder with the model to run, must be a
			       # subfolder from "lib_folder"
model=run4.mod		       # NM model
reference=run4.lst             # The reference NM output file in the lib_folder.
			       # By default equal to NM model filename with
			       # the default NM output extension
nm_version=default	       # Overrides default NM version.
extra_files=		       # If extra files are reqd for the run, these
			       # will be copied to the run folder
extra_arguments=               # Optional arguments to specify to PsN
R_script=execute.R  	       # Validation script (R). Optional, default is:
			       # <psn_command>.R
			       # All R-scripts are in the /R folder.
command_explicit=              # Explicitly specify the whole command line,
			       # which overrides all other settings.
ofv_abs_tol=1                  # Absolute tolerance allowed in OFV.
run_psn=0                      # Actually run the PsN command for this tool?
			       # if 0 or FALSE, the command wil not be run
			       # and the test (if implemented) will be performed
			       # using previously generated output (if avail.)
			       # By default 1
run_test=0		       # Actually perform the test using the R-script?
			       # By default 1

## tests
test_ofv=TRUE
test_parameters=TRUE
## /tests

[execute] # not all of the above settings are reqd! Simpler implementation of the same:
folder=examples1
model=run4.mod
run_psn=0
run_test=0
## tests
test_all=1
## /tests

[execute]
folder=examples2
model=run4.mod
run_psn=0
run_test=0
## tests
test_all=1
## /tests

[bootstrap]
run_psn=0
run_test=0
folder=examples1
model=run4.mod
reference=bootstrap_dir1  # the bootstrap reference folder, in which a
			  # file called raw_results_<run>.csv and
			  # bootstrap_results.csv should be present.
seed=12345                # specify seed for reproducibility
lst=run4.lst              # if seed is specified, also the lst-file is req'd!!
samples=100
tolerance=0.05            # 5% tolerance
ofv_abs_tol=3             # absolute tolerance for OFV comparisons

## tests
test_ofv_mean=1
test_ofv_sd=1
test_parameter_mean=1
test_parameter_sd=1
test_bootstrap_ofv=1	    # Compare OFVs for every
			    # bootstrap sample with the
		 	    # reference OFVs. Only makes sense if
		 	    # -seed is set!
test_bootstrap_theta=1      # Compare parameters for every
			    # bootstrap sample with the
		 	    # reference. Only makes sense if
		            # -seed is set! Only done on thetas, will fail often on omegas.
## /tests

[bootstrap]
run_psn=0
run_test=0
folder=examples2
model=run5.mod
reference=bs_dir1
samples=100
tolerance=0.3               # this was not run with -seed option, so increase tolerance considerably,
                            # or increase samples a lot!
ofv_abs_tol=3
## tests
test_ofv_mean=1
test_ofv_sd=1
test_parameter_mean=1
test_parameter_sd=1
## /tests

[vpc]
model=run4.mod
folder=examples1
reference=vpc_dir1  # the vpc reference folder, in which a
	            # file called raw_results_<run>*.csv and the file
		    # vpc_results.csv should be present.
seed=12345
lst=run4.lst        # Also specify lst-file if seed is specified
samples=500
tolerance=0.05
extra_arguments=-bin_by_count -no_of_bins=8 -dv=CP
run_psn=0
run_test=1
##tests
test_obs_median=1
test_obs_5=1
test_obs_95=1
test_pi_median=1
test_pi_median_ci=0
test_pi_95=1
test_pi_5=1
## /tests

[llp]
folder=examples1
model=run4.mod
extra_arguments=-thetas='1,2' -rse_thetas='20,20'
reference=llp_dir1  # the llp reference folder, in which a
	            # file called raw_results_<run>*.csv and the file
		    # llp_results.csv should be present.
run_psn=0
run_test=1
## tests
test_ci=1
test_ofv=1
## /tests

[llp]
folder=examples2
model=run4.mod
extra_arguments=-thetas='1,2' -rse_thetas='20,20'
reference=llp_dir1  # the llp reference folder, in which a
	            # file called raw_results_<run>*.csv and the file
		    # llp_results.csv should be present.
## tests
test_ci=1
test_ofv=1
## /tests

[scm]
run_psn=0
run_test=1
folder=examples2
model=run4.mod  # not required
extra_files=psp.scm
extra_arguments=-config_file=psp.scm
reference=scm_run5
ofv_abs_tol=1
## tests
test_ofv_final_model=1  # test if OFV for final model is the same
test_final_model_same=1 # test if final covariate model is the same
## /tests

[cdd]
run_psn=0
run_test=1
folder=examples2
model=run4.mod
case_column=CENT
reference=cdd_dir1
ofv_abs_tol=1
## tests
test_jackknife_par_bias=1
test_jackknife_ofv_bias=1
## /tests

[lasso]
run_psn=1
run_test=1
folder=examples2
model=run4.mod
lst=run4.lst
seed=110936
tolerance=0.01
relations=CL:WT-2,AGE-2,SEX-1,CENT-1,,V1:WT-2,AGE-2,SEX-1,CENT-1
reference=lasso_dir1
## tests
test_coeff=1   # compares all reported coefficients
## /tests
